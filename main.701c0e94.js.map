{"version":3,"sources":["scripts/main.js"],"names":["newGameField","button","document","querySelector","messageStart","messageWin","messageLose","gameScore","fieldRows","querySelectorAll","size","score","isWin","gameField","move","e","key","left","right","down","up","row","col","addNumber","render","classList","remove","isPosibleToMove","removeEventListener","reset","contains","add","findEmptyCell","randomY","randomX","Math","random","emptyCells","forEach","rowIndex","cell","columnIndex","push","floor","length","elem","children","textContent","className","checkRows","map","newRow","filter","index","splice","concat","Array","fill","reverseRows","reverse","transposeGameField","_","colIndex","checkColumns","i","some","j","addEventListener","replace","innerText"],"mappings":"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","file":"main.701c0e94.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst button = document.querySelector('button');\nconst messageStart = document.querySelector('.message-start');\nconst messageWin = document.querySelector('.message-win');\nconst messageLose = document.querySelector('.message-lose');\nconst gameScore = document.querySelector('.game-score');\nconst fieldRows = document.querySelectorAll('.field-row');\nconst size = 4;\nlet score = 0;\nlet isWin = false;\nlet newGameField;\nlet gameField = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n];\n\nbutton.addEventListener('click', e => {\n  document.addEventListener('keydown', move);\n\n  if (button.classList.contains('start')) {\n    button.classList.replace('start', 'restart');\n    button.innerText = 'Restart';\n    messageStart.classList.add('hidden');\n  } else {\n    isWin = false;\n    reset();\n  }\n\n  addNumber();\n  addNumber();\n  render();\n});\n\nfunction move(e) {\n  newGameField = gameField;\n\n  switch (e.key) {\n    case 'ArrowLeft':\n      left();\n      break;\n\n    case 'ArrowRight':\n      right();\n      break;\n\n    case 'ArrowDown':\n      down();\n      break;\n\n    case 'ArrowUp':\n      up();\n      break;\n\n    default:\n      return;\n  }\n\n  for (let row = 0; row < size; row++) {\n    for (let col = 0; col < size; col++) {\n      if (newGameField[row][col] !== gameField[row][col]) {\n        gameField = newGameField;\n        addNumber();\n        render();\n      }\n    }\n  }\n\n  if (isWin) {\n    messageWin.classList.remove('hidden');\n  }\n\n  if (!isPosibleToMove()) {\n    messageLose.classList.remove('hidden');\n    document.removeEventListener('keydown', move);\n  }\n}\n\nfunction reset() {\n  score = 0;\n\n  gameField = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n\n  if (!messageLose.classList.contains('hidden')) {\n    messageLose.classList.add('hidden');\n  }\n\n  if (!messageWin.classList.contains('hidden')) {\n    messageWin.classList.add('hidden');\n  }\n};\n\nfunction addNumber() {\n  const [randomY, randomX] = findEmptyCell();\n\n  gameField[randomY][randomX] = Math.random() < 0.9 ? 2 : 4;\n};\n\nfunction findEmptyCell() {\n  const emptyCells = [];\n\n  gameField.forEach((row, rowIndex) => {\n    row.forEach((cell, columnIndex) => {\n      if (cell === 0) {\n        emptyCells.push([rowIndex, columnIndex]);\n      }\n    });\n  });\n\n  return emptyCells[Math.floor(Math.random() * emptyCells.length)];\n}\n\nfunction render() {\n  for (let row = 0; row < size; row++) {\n    for (let col = 0; col < size; col++) {\n      const elem = fieldRows[row].children[col];\n      const cell = gameField[row][col];\n\n      if (cell === 0) {\n        elem.textContent = '';\n        elem.className = 'field-cell';\n      } else {\n        elem.textContent = cell;\n        elem.className = `field-cell field-cell--${cell}`;\n      }\n    };\n  };\n\n  gameScore.textContent = score;\n};\n\nfunction left() {\n  if (!checkRows()) {\n    return;\n  }\n\n  newGameField = newGameField.map(row => {\n    const newRow = row.filter(cell => cell !== 0);\n\n    newRow.forEach((cell, index) => {\n      if (cell === newRow[index + 1]) {\n        newRow[index] *= 2;\n        newRow.splice(index + 1, 1);\n        score += newRow[index];\n\n        if (newRow[index] === 2048) {\n          isWin = true;\n        }\n      }\n    });\n\n    return newRow.concat(Array(size - newRow.length).fill(0));\n  });\n}\n\nfunction right() {\n  if (!checkRows()) {\n    return;\n  }\n\n  reverseRows();\n  left();\n  reverseRows();\n}\n\nfunction reverseRows() {\n  newGameField.forEach(row => row.reverse());\n}\n\nfunction down() {\n  transposeGameField();\n  right();\n  transposeGameField();\n}\n\nfunction up() {\n  transposeGameField();\n  left();\n  transposeGameField();\n}\n\nfunction transposeGameField() {\n  newGameField = newGameField[0]\n    .map((_, colIndex) => newGameField.map(row => row[colIndex]));\n}\n\nfunction isPosibleToMove() {\n  if (checkRows()) {\n    return true;\n  }\n\n  transposeGameField();\n\n  return checkColumns();\n}\n\nfunction checkRows() {\n  for (let i = 0; i < size; i++) {\n    if (newGameField[i].some(cell => cell === 0)\n      || newGameField[i].some((cell, j) => cell === newGameField[i][j + 1])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction checkColumns() {\n  for (let i = 0; i < size; i++) {\n    if (newGameField[i].some((cell, j) => cell === newGameField[i][j + 1])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n"]}